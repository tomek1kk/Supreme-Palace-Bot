// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SupremeBot.Data;

namespace SupremeBot.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SupremeBot.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FullName")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<string>("PostCode")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("SupremeBot.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVV")
                        .IsRequired();

                    b.Property<string>("Month")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.Property<string>("Year")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("SupremeBot.Models.Dto.TaskItemDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<int>("CardId");

                    b.Property<int>("Delay");

                    b.Property<bool>("FillAdress");

                    b.Property<int>("Hour");

                    b.Property<int>("Minute");

                    b.Property<string>("Name");

                    b.Property<bool>("OnlyWithEmptyBasket");

                    b.Property<int>("RefreshInterval");

                    b.Property<int>("Second");

                    b.Property<bool>("UseTimer");

                    b.HasKey("Id");

                    b.ToTable("TaskItemDto");
                });

            modelBuilder.Entity("SupremeBot.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AnyColor");

                    b.Property<int>("Category");

                    b.Property<string>("Colors");

                    b.Property<string>("Names");

                    b.Property<int>("Size");

                    b.Property<int?>("TaskItemId");

                    b.HasKey("Id");

                    b.HasIndex("TaskItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SupremeBot.Models.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<int>("CardId");

                    b.Property<int>("Delay");

                    b.Property<bool>("FillAdress");

                    b.Property<int>("Hour");

                    b.Property<int>("Minute");

                    b.Property<string>("Name");

                    b.Property<bool>("OnlyWithEmptyBasket");

                    b.Property<int>("RefreshInterval");

                    b.Property<int>("Second");

                    b.Property<bool>("UseTimer");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CardId");

                    b.ToTable("TaskItems");
                });

            modelBuilder.Entity("SupremeBot.Models.Item", b =>
                {
                    b.HasOne("SupremeBot.Models.TaskItem")
                        .WithMany("Items")
                        .HasForeignKey("TaskItemId");
                });

            modelBuilder.Entity("SupremeBot.Models.TaskItem", b =>
                {
                    b.HasOne("SupremeBot.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SupremeBot.Models.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
